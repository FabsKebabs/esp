local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Create a Drawing object to represent the outline
local function DrawLine()
    local line = Drawing.new("Line")
    line.Visible = false
    line.Color = Color3.fromRGB(255, 0, 0) -- Red outline color
    line.Thickness = 2
    return line
end

-- Create Outline ESP for a player
local function CreateOutlineESP(player)
    if player == LocalPlayer then return end

    -- Get the parts to outline on the character
    local function GetCharacterParts(character)
        local parts = {}
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                table.insert(parts, part)
            end
        end
        return parts
    end

    -- Store all lines we create so we can remove them later
    local outlineLines = {}

    -- Draw a line between two parts of the character
    local function DrawOutlineLine(fromPart, toPart)
        local line = DrawLine()
        table.insert(outlineLines, line)

        local function UpdateLine()
            RunService.RenderStepped:Connect(function()
                if fromPart and toPart then
                    local fromPos, fromOnScreen = Camera:WorldToViewportPoint(fromPart.Position)
                    local toPos, toOnScreen = Camera:WorldToViewportPoint(toPart.Position)

                    -- Only show line if both parts are visible on screen
                    if fromOnScreen and toOnScreen then
                        line.Visible = true
                        line.From = Vector2.new(fromPos.X, fromPos.Y)
                        line.To = Vector2.new(toPos.X, toPos.Y)
                    else
                        line.Visible = false
                    end
                else
                    line.Visible = false
                end
            end)
        end

        coroutine.wrap(UpdateLine)()
    end

    -- Create outline for each player's character
    local function CreateCharacterOutline(character)
        local parts = GetCharacterParts(character)
        local head, torso, leftLeg, rightLeg, leftArm, rightArm

        -- Fetch specific parts
        for _, part in pairs(parts) do
            if part.Name == "Head" then head = part end
            if part.Name == "UpperTorso" or part.Name == "Torso" then torso = part end
            if part.Name == "LeftLeg" then leftLeg = part end
            if part.Name == "RightLeg" then rightLeg = part end
            if part.Name == "LeftArm" then leftArm = part end
            if part.Name == "RightArm" then rightArm = part end
        end

        -- Draw lines connecting the main body parts to form a structured outline
        if head and torso then
            DrawOutlineLine(head, torso)
        end
        if torso and leftLeg then
            DrawOutlineLine(torso, leftLeg)
        end
        if torso and rightLeg then
            DrawOutlineLine(torso, rightLeg)
        end
        if torso and leftArm then
            DrawOutlineLine(torso, leftArm)
        end
        if torso and rightArm then
            DrawOutlineLine(torso, rightArm)
        end
        if leftLeg and rightLeg then
            DrawOutlineLine(leftLeg, rightLeg)
        end
        if leftArm and rightArm then
            DrawOutlineLine(leftArm, rightArm)
        end
    end

    -- Update the outline when the player spawns
    player.CharacterAdded:Connect(function(character)
        CreateCharacterOutline(character)
    end)

    -- Create the outline immediately if the player already has a character
    if player.Character then
        CreateCharacterOutline(player.Character)
    end
end

-- Initialize Outline ESP for existing players
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        CreateOutlineESP(player)
    end
end

-- Add Outline ESP for new players
Players.PlayerAdded:Connect(function(player)
    CreateOutlineESP(player)
end)
